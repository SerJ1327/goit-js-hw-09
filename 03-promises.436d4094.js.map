{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAK,sBAAoBJ,QAAeC,KAAS,GAClDA,EAAM,IAGHQ,MACNC,IACEb,EAAAc,OAAOC,QAAQF,EAAO,IAExBA,IACEb,EAAAc,OAAOE,QAAQH,EAAO,G,CAnCfI,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIjB,EAAQkB,OAAOF,EAAEG,cAAcC,SAASpB,MAAMqB,OAC9CC,EAAOJ,OAAOF,EAAEG,cAAcC,SAASE,KAAKD,OAC5CE,EAASL,OAAOF,EAAEG,cAAcC,SAASG,OAAOF,OAEpD,IAAK,IAAItB,EAAW,EAAGA,GAAYwB,EAAQxB,GAAY,EACrDD,EAAcC,EAAUC,GAExBA,GAASsB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let delay = Number(e.currentTarget.elements.delay.value);\n  let step = Number(e.currentTarget.elements.step.value);\n  let amount = Number(e.currentTarget.elements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay);\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}m`);\n    }, delay);\n  });\n\n  promise.then(\n    result => {\n      Notify.success(result);\n    },\n    result => {\n      Notify.warning(result);\n    }\n  );\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","result","Notify","success","warning","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","elements","value","step","amount"],"version":3,"file":"03-promises.436d4094.js.map"}